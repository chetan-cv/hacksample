class hii { 
    void aho(String str1, String str2) 
    { 
        int M = str1.length(); 
        int N = str2.length();
        int arr[] = new int[M]; 
        int j = 0; 
        compute(str1, M, arr); 
         int i = 0;  
        while (i < N) 
        { 
            if (str1.charAt(j) == str2.charAt(i)) { 
                j++; 
                i++; 
            } 
            if (j==M)
            { 
                System.out.println("Found pattern "+ "at index " + (i - j)); 
                j = arr[j - 1]; 
            }
            else if (i < N && str1.charAt(j) != str2.charAt(i)) 
            {
            
                if (j != 0) 
                    j = arr[j - 1]; 
                else
                    i = i + 1; 
            } 
        } 
    } 
  
    void compute(String str1, int M, int arr2[]) 
    { 
        int len = 0; 
        int i = 1; 
        arr2[0] = 0;
        while (i < M)
        { 
            if (str1.charAt(i) == str1.charAt(len)) { 
                len++; 
                arr2[i] = len; 
                i++; 
            } 
            else 
            { 
                    if (len != 0) 
                    { 
                    len = arr2[len - 1]; 
                     } 
                else 
                { 
                    arr2[i] = len; 
                    i++; 
                } 
            } 
        } 
    } 
  
    
    public static void main(String args[]) 
    { 
        String str1= "ABABDABACDABABCABAB"; 
        String str2 = "ABABCABAB"; 
        new hii().aho(str1, str2); 
    } 
} 
